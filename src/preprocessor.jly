local preprocess -> (lines, def, source)
    local lineNumber = 0
    local prepmsg = "preprocessing: {source}"
    info(prepmsg)
    for k, v in pairs(def)
        local msg = "\r\tpreprocessor definition: {def}"
        info(msg)
    end
    local ret = {}
    local macros = {}
    local defined = {}
    local condScopes = {}

    local newScope -> (addl)
        table.insert(condScopes, 1, addl)
    end
    local checkScope -> ()
        if (condScopes[1] == nil) return true
        elseif (condScopes[1]) return true
        else return false
        end
    end
    local closeScope -> ()
        table.remove(condScopes, 1)
    end

    local actions = {
        ['define'] = (dt)->
            local name, value = string.match(dt, '(%w+)%s*([%w%s%p]*)')
            if (defined[name])
                local errMsg = "{name} already defined"
                err(errMsg)
            end
            if (value == '')
                defined[name] = true
            else
                defined[name] = value
            end
        end,
        ['include'] = (path)->
            return preprocess(readFile(path), defined, path)
        end,
        ['note'] = (text)->
            local msg = "NOTE({source} | {lineNumber}): {text}"
            print(msg)
        end,
        ['error'] = (err)->
            local msg = "ERROR({source} | {lineNumber}): {err}"
            print(msg)
            os.exit()
        end
    }

    for i, line in ipairs(lines)
        lineNumber = i
        if (string.sub(line, 1, 2) == '-/')
            local act, args = string.match(line, '\\-/(%w+)%s*([%w%s%p]*)')
            if (actions[act])
                local res = actions[act](args)
                if res
                    table.insert(ret, res)
                end
            elseif (act == 'if')
                local expr = "return {args}"
                expr = load(expr)
                if (expr())

                end
            elseif (act == 'ifnot')
                local expr = "return {args}"
                expr = load(expr)
                unless (expr())

                end
            elseif (act == 'end')

            else
                local errStr = "unknown preprocessor directive \'{act}\' on line {i}"
                err(errStr)
            end
        else
            if (checkScope())
                table.insert(ret, line)
            end
        end
    end

    local text = table.concat(ret, '\n')
    return text
end